name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'

jobs:
  # Lint and Type Check
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org/'

    - name: Install Gitleaks
      run: |
        curl -sSfL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | sh -s -- -b /usr/local/bin v8.18.0

    # Use public npm registry (no auth via CLI)
    - name: Use public npm registry (no auth via CLI)
      run: |
        # Root .npmrc used by all npm invocations
        cat > .npmrc << 'EOF'
        registry=https://registry.npmjs.org/
        always-auth=false
        fund=false
        audit=false
        @*:registry=https://registry.npmjs.org/
        EOF

        # Remove any nested .npmrc that could override these settings
        find . -type f -name ".npmrc" ! -path "./.npmrc" -delete

    - name: Install dependencies (workspace root)
      run: npm ci --ignore-scripts --no-audit --no-fund

    - name: Run type checking
      run: npm run check

    - name: Run secret scanning
      run: npm run scan:secrets

    - name: Run ESLint (if available)
      run: npm run lint --if-present

    - name: Run Prettier check (if available)
      run: npm run format:check --if-present

  # Unit Tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org/'

    # Use public npm registry (no auth via CLI)
    - name: Use public npm registry (no auth via CLI)
      run: |
        # Root .npmrc used by all npm invocations
        cat > .npmrc << 'EOF'
        registry=https://registry.npmjs.org/
        always-auth=false
        fund=false
        audit=false
        @*:registry=https://registry.npmjs.org/
        EOF

        # Remove any nested .npmrc that could override these settings
        find . -type f -name ".npmrc" ! -path "./.npmrc" -delete

    - name: Install dependencies (workspace root)
      run: npm ci --ignore-scripts --no-audit --no-fund

    - name: Run tests
      run: npm test --if-present

    - name: Run test coverage (if available)
      run: npm run test:coverage --if-present

  # Build Test
  build:
    name: Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org/'

    # Use public npm registry (no auth via CLI)
    - name: Use public npm registry (no auth via CLI)
      run: |
        # Root .npmrc used by all npm invocations
        cat > .npmrc << 'EOF'
        registry=https://registry.npmjs.org/
        always-auth=false
        fund=false
        audit=false
        @*:registry=https://registry.npmjs.org/
        EOF

        # Remove any nested .npmrc that could override these settings
        find . -type f -name ".npmrc" ! -path "./.npmrc" -delete

    - name: Install dependencies (workspace root)
      run: npm ci --ignore-scripts --no-audit --no-fund

    - name: Build client
      run: npm -w client run build

    - name: Build server
      run: npm -w server run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          client/dist/
          server/dist/
        retention-days: 1

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run npm audit (non-blocking)
      run: npm audit --audit-level=moderate || true

  # Dependency Check
  dependencies:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org/'

    # Use public npm registry (no auth via CLI)
    - name: Use public npm registry (no auth via CLI)
      run: |
        # Root .npmrc used by all npm invocations
        cat > .npmrc << 'EOF'
        registry=https://registry.npmjs.org/
        always-auth=false
        fund=false
        audit=false
        @*:registry=https://registry.npmjs.org/
        EOF

        # Remove any nested .npmrc that could override these settings
        find . -type f -name ".npmrc" ! -path "./.npmrc" -delete

    - name: Install dependencies (workspace root)
      run: npm ci --ignore-scripts --no-audit --no-fund

    - name: Check for outdated dependencies
      run: npm outdated || true

    - name: Check for security vulnerabilities (non-blocking)
      run: |
        npm audit --audit-level=high > npm-audit.log || true
        echo "npm audit completed (non-blocking)"
    - name: Upload npm audit report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-report
        path: npm-audit.log
